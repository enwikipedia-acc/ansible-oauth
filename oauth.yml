---
- name: Initial bootstrap
  hosts: all

  vars:
    disktype: sd
    base_packages:
      - apache2
      - libapache2-mod-php8.2
      - mariadb-server
      - redis
      - htop
      - aptitude
      - php-mbstring
      - php-xml
      - php-redis
      - php-mysql
      - php-intl
      - php-curl
      - composer
      - python3-pymysql

  tasks:
    - name: Make db filesystem
      community.general.filesystem:
        fstype: ext4
        dev: "/dev/{{disktype}}b"
        opts: "-L oauth-db"

    - name: Create www mountpoint
      ansible.builtin.file:
        path: "/var/www"
        state: directory
        mode: '0755'

    - name: Create db mountpoint
      ansible.builtin.file:
        path: "/var/lib/mysql"
        state: directory
        mode: '0755'

    - name: Mount db disk
      ansible.posix.mount:
        path: "/var/lib/mysql"
        src: "LABEL=oauth-db"
        fstype: ext4
        state: mounted

    - name: Install packages
      apt:
        update_cache: yes
        name: "{{ base_packages }}"
      notify: Restart apache2

    - name: Remove default vhost
      ansible.builtin.file:
        path: /etc/apache2/sites-enabled/000-default.conf
        state: absent
      notify: Restart apache2

    - name: Deploy MediaWiki vhost
      ansible.builtin.copy:
        src: mediawiki.conf
        dest: /etc/apache2/sites-enabled/mediawiki.conf
        owner: root
        group: root
        mode: '0644'
      notify: Restart apache2

    - name: Enable mod_rewrite
      ansible.builtin.file:
        src: /etc/apache2/mods-available/rewrite.load
        dest: /etc/apache2/mods-enabled/rewrite.load
        state: link
      notify: Restart apache2

    - name: Fix FS permissions for /var/lib/mysql
      ansible.builtin.file:
        path: /var/lib/mysql
        state: directory
        recurse: yes
        owner: mysql
        group: mysql
      notify: Restart mariadb
  handlers:
    - name: Restart mariadb
      service:
        name: mariadb
        state: restarted

    - name: Restart apache2
      service:
        name: apache2
        state: restarted

- name: Deploy MediaWiki
  hosts: all
  vars:
    wgServer: localhost
    urlScheme: https
    version: REL1_40
    wikis:
      - metawiki
      - enwiki
      - bnwiki
      - eswiki
      - ruwiki
  tasks:
    - name: check if LocalSettings.php exists
      stat: 
        path: /var/www/w/LocalSettings.php
      register: localsettings
    - name: Create www mountpoint
      ansible.builtin.file:
        path: "/var/www"
        state: directory
        mode: '0755'
    - name: Root redirect
      ansible.builtin.copy:
        content: '<?php header("Location: /w/index.php");'
        dest: /var/www/index.php
    - name: Create MySQL user
      community.mysql.mysql_user:
        state: present
        name: wikiuser
        password: wikiuser
        priv:
          'enwiki.*': 'ALL'
          'eswiki.*': 'ALL'
          'ruwiki.*': 'ALL'
          'bnwiki.*': 'ALL'
          'metawiki.*': 'ALL'
          'centralauth.*': 'ALL'
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create centralauth
      community.mysql.mysql_db:
        name: centralauth
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
      register: wikidb

    - name: Create wiki databases
      community.mysql.mysql_db:
        name: "{{item}}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
      loop: "{{wikis}}"

    - name: MediaWiki git checkout
      ansible.builtin.git:
        repo: https://gerrit.wikimedia.org/r/mediawiki/core.git
        dest: /var/www/w
        version: "{{version}}"
        recursive: false
        accept_hostkey: true
        force: yes
        depth: 1

    - name: Checkout extensions
      ansible.builtin.git:
        repo: "https://gerrit.wikimedia.org/r/p/mediawiki/extensions/{{item}}.git"
        dest: "/var/www/w/extensions/{{item}}"
        version: "{{version}}"
        accept_hostkey: true
        force: yes
        depth: 1
      loop:
        - AntiSpoof
        - CentralAuth
        - CheckUser
        - TitleBlacklist
        - OAuth
    
    - name: Vector git checkout
      ansible.builtin.git:
        repo: https://gerrit.wikimedia.org/r/mediawiki/skins/Vector.git
        dest: /var/www/w/skins/Vector
        version: "{{version}}"
        accept_hostkey: true
        force: yes
        depth: 1
    - name: Composer
      include_tasks: composer.yml
      loop:
        - /var/www/w/
        - /var/www/w/extensions/CentralAuth/
        - /var/www/w/extensions/CheckUser/
        - /var/www/w/extensions/TitleBlacklist/
        - /var/www/w/extensions/OAuth/
        - /var/www/w/extensions/AntiSpoof/

    - name: Create logs directory
      ansible.builtin.file:
        path: "/var/log/mediawiki"
        state: directory
        mode: '0755'
        owner: www-data
        group: www-data

    - name: Create wiki log directorys
      ansible.builtin.file:
        path: "/var/log/mediawiki/{{item}}"
        state: directory
        mode: '0755'
        owner: www-data
        group: www-data
      loop: "{{wikis}}"

    - name: Install MediaWiki
      ansible.builtin.shell:
        cmd: php maintenance/run.php install --dbname="{{item}}" --dbpass=wikiuser --server="{{urlScheme}}://{{wgServer}}" --scriptpath=/w "--confpath=/var/log/mediawiki/{{item}}/" --lang=en --pass=Adminpassword "Metawiki" Admin
        chdir: /var/www/w
      when: wikidb.changed
      loop: "{{wikis}}"

    - name: Local settings
      ansible.builtin.copy:
        src: LocalSettings.php
        dest: /var/www/w/LocalSettings.php

    - name: Install CentralAuth database
      ansible.builtin.shell:
        cmd: php maintenance/run.php sql --wiki centralauth extensions/CentralAuth/schema/mysql/tables-generated.sql
        chdir: /var/www/w
      when: wikidb.changed

    - name: Install Central AntiSpoof database
      ansible.builtin.shell:
        cmd: php maintenance/run.php sql --wiki centralauth extensions/AntiSpoof/sql/mysql/tables-generated.sql
        chdir: /var/www/w
      when: wikidb.changed

    - name: Update MediaWiki
      ansible.builtin.shell:
        cmd: "php maintenance/run.php update --quick --wiki {{item}}"
        chdir: /var/www/w
      loop: "{{wikis}}"

    - name: Update Main Page
      ansible.builtin.shell:
        cmd: php maintenance/edit.php --wiki "{{item}}" -b --user "Ansible playbook"  "Main Page"
        chdir: /var/www/w
        stdin: |
          This wiki is intended for testing OAuth applications against MediaWiki. If you need access to experiment with OAuth, contact [[Special:ListUsers/sysop|an existing user with access]] for an account.

          == OAuth consumers ==

          * [[meta:Special:OAuthConsumerRegistration/propose|Propose a consumer]]
          * [[meta:Special:OAuthManageConsumers/proposed|Approve the consumer]]


          * [[meta:Special:OAuthConsumerRegistration/list|My registered consumers]]


          * [[Special:OAuthManageMyGrants|Consumers approved to access my account]]

          == All consumers ==
          * [[meta:Special:OAuthManageConsumers/proposed|All proposed consumers]]
          * [[meta:Special:OAuthManageConsumers/approved|All approved consumers]]

          * [[meta:Special:OAuthManageConsumers/disabled|All disabled consumers]]
          * [[meta:Special:OAuthManageConsumers/rejected|All rejected consumers]]
          * [[meta:Special:OAuthManageConsumers/expired|All expired consumers]]
      loop: "{{wikis}}"

    - name: Update Title blacklist
      ansible.builtin.shell:
        cmd: php maintenance/edit.php --wiki "{{item}}" -b --user "Ansible playbook"  "MediaWiki:Titleblacklist"
        chdir: /var/www/w
        stdin: |
          # This is a disallowed titles list. Titles and usernames that match a regular expression here cannot be created.
          # Use "#" for comments.
          # This is case-insensitive by default
          .*blacklist.* <newaccountonly>
      loop: "{{wikis}}"

    - name: Update copyright
      ansible.builtin.shell:
        cmd: php maintenance/edit.php --wiki "{{item}}" -b --user "Ansible playbook"  "MediaWiki:Copyright"
        chdir: /var/www/w
        stdin: |
          Content is available under $1 unless otherwise noted.

          <div style="background-color: #FFE0E0; border: 2px dashed #AA0000; padding: 0.5em; margin-top:1em">
          <b>Warning: this is <u>not</u> a live Wikimedia Foundation project.</b> This site is used only for testing and development purposes. This site is not covered by the Wikimedia Foundationâ€™s Terms of Use or Privacy Policy. Do not disclose personal information on this site and do not use this site to post any illegal or harmful content. For more information on this test environment, see <a href="https://wikitech.wikimedia.org">Wikimedia Cloud Services</a>.
          </div>
      loop: "{{wikis}}"

    - name: Set admin user email address
      ansible.builtin.shell:
        cmd: "php maintenance/resetUserEmail.php --wiki {{item}} --no-reset-password Admin root@localhost"
        chdir: /var/www/w
      loop: "{{wikis}}"
      when: wikidb.changed


    - name: CentralAuth migration pass 0
      ansible.builtin.shell:
        cmd: "php extensions/CentralAuth/maintenance/migratePass0.php --wiki {{item}}"
        chdir: /var/www/w
      loop: "{{wikis}}"
      when: wikidb.changed

    - name: CentralAuth migration pass 1
      ansible.builtin.shell:
        cmd: "php extensions/CentralAuth/maintenance/migratePass1.php --wiki metawiki"
        chdir: /var/www/w
      when: wikidb.changed

    - name: Configure intial global group
      ansible.builtin.shell:
        cmd: php maintenance/run.php sql --wiki centralauth --query "INSERT INTO global_group_permissions (ggp_group,ggp_permission) VALUES ('steward','globalgrouppermissions'), ('steward','globalgroupmembership');"
        chdir: /var/www/w
      when: wikidb.changed

    - name: Promote initial user to steward
      ansible.builtin.shell:
        cmd: php maintenance/run.php createAndPromote --wiki metawiki --custom-groups steward --force Admin
        chdir: /var/www/w
      when: wikidb.changed

    - name: Run Steward migration
      ansible.builtin.shell:
        cmd: "php extensions/CentralAuth/maintenance/migrateStewards.php --wiki metawiki"
        chdir: /var/www/w
      when: wikidb.changed

    - name: Configure meta interwiki
      ansible.builtin.command:
        cmd: php maintenance/run.php sql --wiki {{item}} --query "insert into interwiki (iw_prefix, iw_url, iw_local, iw_api, iw_wikiid) values ('meta', 'https://metawiki.sbx.aws.stwalkerster.cloud/wiki/$1', 1, '', '');"
        chdir: /var/www/w
      loop: "{{wikis}}"
      when: wikidb.changed
